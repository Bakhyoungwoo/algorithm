#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
using namespace std;

int main()
{
	int N;
	cin >> N;

	vector<string> words(N, "");
	vector<pair<int, char>> weights;
	for (int i = 0; i < 26; i++)
		weights.push_back({ 0,'A' + i });

	for (int w = 0; w < N; w++)
		cin >> words[w];

	for (int w = 0; w < N; w++)
	{
		for (int i = 0; i < words[w].size(); i++)
		{
			char word = words[w][i];
			int idx = words[w].size() - i - 1;
			weights[word - 'A'].first += pow(10, idx);
		}
	}

	sort(weights.begin(), weights.end(), greater<>());

	vector<char> nums(26, -1);
	char nowNum = '9';
	for (int i = 0; i < weights.size(); i++)
	{
		if (weights[i].first == 0) break;
		nums[weights[i].second - 'A'] = nowNum;
		nowNum--;
	}
    
	int ans = 0;

	for (int w = 0; w < words.size(); w++)
	{
		string& str = words[w];
		
		for (int i = 0; i < str.size(); i++)
		{
			char c = str[i];
			str.erase(i, 1);
			str.insert(i, 1, nums[c - 'A']);
		}
		ans += stoi(str);
	}
	cout << ans;
}
